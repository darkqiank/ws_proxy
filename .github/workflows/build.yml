name: Build Release Binaries

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    name: Build for ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]
        exclude:
          # 排除不常用的组合
          - os: windows
            arch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Build client
        run: |
          mkdir -p releases
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -v -o releases/client-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }} ./client
      
      - name: Build server
        run: |
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -v -o releases/server-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }} ./server

      - name: Copy config files
        run: |
          cp client/config.json releases/client-config.json
          cp server/config.json releases/server-config.json
          cp README.md releases/

      - name: Archive releases for ${{ matrix.os }}-${{ matrix.arch }}
        run: |
          cd releases
          if [ "${{ matrix.os }}" = "windows" ]; then
            zip -r ../gotunnel-${{ matrix.os }}-${{ matrix.arch }}.zip .
          else
            tar -czvf ../gotunnel-${{ matrix.os }}-${{ matrix.arch }}.tar.gz .
          fi
          cd ..

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: gotunnel-${{ matrix.os }}-${{ matrix.arch }}
          path: gotunnel-${{ matrix.os }}-${{ matrix.arch }}.${{ matrix.os == 'windows' && 'zip' || 'tar.gz' }}
          retention-days: 5

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: GoTunnel ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: artifacts/**/*
          body: |
            GoTunnel 内网穿透工具 ${{ github.ref_name }} 发布
            
            ## 使用方法
            
            请查看 README.md 文件获取使用详情 